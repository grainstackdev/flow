foo_parse_fail.js = hasOwnProperty (prop: mixed) => boolean
isPrototypeOf (o: mixed) => boolean
num number
propertyIsEnumerable (prop: mixed) => boolean
str string
toLocaleString () => string
toString () => string
valueOf () => mixed
foo.js = {
  "result":[
    {"name":"hasOwnProperty","type":"(prop: mixed) => boolean"},
    {"name":"isPrototypeOf","type":"(o: mixed) => boolean"},
    {"name":"num","type":"number"},
    {"name":"propertyIsEnumerable","type":"(prop: mixed) => boolean"},
    {"name":"str","type":"string"},
    {"name":"toLocaleString","type":"() => string"},
    {"name":"toString","type":"() => string"},
    {"name":"valueOf","type":"() => mixed"}
  ]
}
bar.js = {"error":"not enough type information to autocomplete","result":[]}
str.js = {
  "result":[
    {"name":"@@iterator","type":"() => Iterator<string>"},
    {"name":"anchor","type":"(name: string) => string"},
    {"name":"charAt","type":"(pos: number) => string"},
    {"name":"charCodeAt","type":"(index: number) => number"},
    {"name":"codePointAt","type":"(index: number) => number"},
    {"name":"concat","type":"(...strings: Array<string>) => string"},
    {
      "name":"endsWith",
      "type":"(searchString: string, position?: number) => boolean"
    },
    {"name":"hasOwnProperty","type":"(prop: mixed) => boolean"},
    {
      "name":"includes",
      "type":"(searchString: string, position?: number) => boolean"
    },
    {"name":"indexOf","type":"(searchString: string, position?: number) => number"},
    {"name":"isPrototypeOf","type":"(o: mixed) => boolean"},
    {
      "name":"lastIndexOf",
      "type":"(searchString: string, position?: number) => number"
    },
    {"name":"length","type":"number"},
    {"name":"link","type":"(href: string) => string"},
    {
      "name":"localeCompare",
      "type":"(that: string, locales?: (string | Array<string>), options?: Intl$CollatorOptions) => number"
    },
    {
      "name":"match",
      "type":"(regexp: (string | RegExp)) => (RegExp$matchResult | null)"
    },
    {
      "name":"matchAll",
      "type":"(regexp: (string | RegExp)) => Iterator<RegExp$matchResult>"
    },
    {"name":"normalize","type":"(format?: string) => string"},
    {"name":"padEnd","type":"(targetLength: number, padString?: string) => string"},
    {
      "name":"padStart",
      "type":"(targetLength: number, padString?: string) => string"
    },
    {"name":"propertyIsEnumerable","type":"(prop: mixed) => boolean"},
    {"name":"repeat","type":"(count: number) => string"},
    {
      "name":"replace",
      "type":"(searchValue: (string | RegExp), replaceValue: (string | ((substring: string, ...args: Array<any>) => string))) => string"
    },
    {"name":"search","type":"(regexp: (string | RegExp)) => number"},
    {"name":"slice","type":"(start?: number, end?: number) => string"},
    {
      "name":"split",
      "type":"(separator?: (string | RegExp), limit?: number) => Array<string>"
    },
    {
      "name":"startsWith",
      "type":"(searchString: string, position?: number) => boolean"
    },
    {"name":"substr","type":"(from: number, length?: number) => string"},
    {"name":"substring","type":"(start: number, end?: number) => string"},
    {
      "name":"toLocaleLowerCase",
      "type":"(locale?: (string | Array<string>)) => string"
    },
    {"name":"toLocaleString","type":"() => string"},
    {
      "name":"toLocaleUpperCase",
      "type":"(locale?: (string | Array<string>)) => string"
    },
    {"name":"toLowerCase","type":"() => string"},
    {"name":"toString","type":"() => string"},
    {"name":"toUpperCase","type":"() => string"},
    {"name":"trim","type":"() => string"},
    {"name":"trimEnd","type":"() => string"},
    {"name":"trimLeft","type":"() => string"},
    {"name":"trimRight","type":"() => string"},
    {"name":"trimStart","type":"() => string"},
    {"name":"valueOf","type":"() => string"}
  ]
}
num.js = {
  "result":[
    {"name":"hasOwnProperty","type":"(prop: mixed) => boolean"},
    {"name":"isPrototypeOf","type":"(o: mixed) => boolean"},
    {"name":"propertyIsEnumerable","type":"(prop: mixed) => boolean"},
    {"name":"toExponential","type":"(fractionDigits?: number) => string"},
    {"name":"toFixed","type":"(fractionDigits?: number) => string"},
    {
      "name":"toLocaleString",
      "type":"(locales?: (string | Array<string>), options?: Intl$NumberFormatOptions) => string"
    },
    {"name":"toPrecision","type":"(precision?: number) => string"},
    {"name":"toString","type":"(radix?: number) => string"},
    {"name":"valueOf","type":"() => number"}
  ]
}
bool.js = {
  "result":[
    {"name":"hasOwnProperty","type":"(prop: mixed) => boolean"},
    {"name":"isPrototypeOf","type":"(o: mixed) => boolean"},
    {"name":"propertyIsEnumerable","type":"(prop: mixed) => boolean"},
    {"name":"toLocaleString","type":"() => string"},
    {"name":"toString","type":"() => string"},
    {"name":"valueOf","type":"() => boolean"}
  ]
}
union.js = {
  "result":[
    {"name":"bar","type":"string | any"},
    {"name":"hasOwnProperty","type":"((prop: mixed) => boolean) | any"},
    {"name":"isPrototypeOf","type":"((o: mixed) => boolean) | any"},
    {"name":"propertyIsEnumerable","type":"((prop: mixed) => boolean) | any"},
    {"name":"toLocaleString","type":"(() => string) | any"},
    {"name":"toString","type":"(() => string) | any"},
    {"name":"valueOf","type":"(() => mixed) | any"}
  ]
}
object_builtins.js = {"error":"not enough type information to autocomplete","result":[]}
function_builtins.js = {"error":"not enough type information to autocomplete","result":[]}
fun.js = {
  "result":[
    {"name":"apply","type":"(thisArg: any, argArray?: any) => any"},
    {"name":"arguments","type":"any"},
    {"name":"bind","type":"(thisArg: any, ...argArray: Array<any>) => any"},
    {"name":"call","type":"(thisArg: any, ...argArray: Array<any>) => any"},
    {"name":"caller","type":"any | null"},
    {"name":"hasOwnProperty","type":"(prop: mixed) => boolean"},
    {"name":"isPrototypeOf","type":"(o: mixed) => boolean"},
    {"name":"length","type":"number"},
    {"name":"name","type":"string"},
    {"name":"propertyIsEnumerable","type":"(prop: mixed) => boolean"},
    {"name":"toLocaleString","type":"() => string"},
    {"name":"toString","type":"() => string"},
    {"name":"valueOf","type":"() => mixed"}
  ]
}
this.js = {
  "result":[
    {"name":"bar","type":"() => void"},
    {"name":"baz","type":"string"},
    {"name":"hasOwnProperty","type":"(prop: mixed) => boolean"},
    {"name":"hello","type":"() => void"},
    {"name":"isPrototypeOf","type":"(o: mixed) => boolean"},
    {"name":"propertyIsEnumerable","type":"(prop: mixed) => boolean"},
    {"name":"toLocaleString","type":"() => string"},
    {"name":"toString","type":"() => string"},
    {"name":"valueOf","type":"() => mixed"}
  ]
}
this2.js = {
  "result":[
    {"name":"super","type":"super"},
    {"name":"this","type":"this"},
    {"name":"A","type":"class A"}
  ]
}
typeparams.js = {
  "result":[
    {"name":"hasOwnProperty","type":"(prop: mixed) => boolean"},
    {"name":"isPrototypeOf","type":"(o: mixed) => boolean"},
    {"name":"propertyIsEnumerable","type":"(prop: mixed) => boolean"},
    {"name":"toExponential","type":"(fractionDigits?: number) => string"},
    {"name":"toFixed","type":"(fractionDigits?: number) => string"},
    {
      "name":"toLocaleString",
      "type":"(locales?: (string | Array<string>), options?: Intl$NumberFormatOptions) => string"
    },
    {"name":"toPrecision","type":"(precision?: number) => string"},
    {"name":"toString","type":"(radix?: number) => string"},
    {"name":"valueOf","type":"() => number"}
  ]
}
typeparams_function.js = {
  "result":[{"name":"this","type":"this"},{"name":"test","type":"<T>() => void"}]
}
generics.js = {
  "result":[
    {"name":"cn","type":"C<number>"},
    {"name":"hasOwnProperty","type":"(prop: mixed) => boolean"},
    {"name":"isPrototypeOf","type":"(o: mixed) => boolean"},
    {"name":"propertyIsEnumerable","type":"(prop: mixed) => boolean"},
    {"name":"toLocaleString","type":"() => string"},
    {"name":"toString","type":"() => string"},
    {"name":"valueOf","type":"() => mixed"}
  ]
}
optional.js = {
  "result":[
    {"name":"f","type":"(x?: string) => void"},
    {"name":"hasOwnProperty","type":"(prop: mixed) => boolean"},
    {"name":"isPrototypeOf","type":"(o: mixed) => boolean"},
    {"name":"o","type":"{x?: string}"},
    {"name":"propertyIsEnumerable","type":"(prop: mixed) => boolean"},
    {"name":"toLocaleString","type":"() => string"},
    {"name":"toString","type":"() => string"},
    {"name":"valueOf","type":"() => mixed"},
    {"name":"x","type":"string | void"}
  ]
}
jsx1.js = {"result":[{"name":"x","type":"number"}]}
jsx2.js = {"result":[{"name":"y","type":"string"}]}
jsx3.js = {"result":[{"name":"x","type":"number"},{"name":"y","type":"string"}]}
jsx4.js = {
  "result":[
    {"name":"Computerization","type":"(props: empty) => void"},
    {"name":"Compressibility","type":"(props: empty) => void"},
    {"name":"Complementarity","type":"class Complementarity"}
  ]
}
jsx-function-component.js = {"result":[{"name":"x","type":"number"},{"name":"y","type":"string"}]}
jsx-function-component-2.js = {"result":[{"name":"x","type":"number"}]}
jsx-function-component-3.js = {"result":[{"name":"y","type":"string"}]}
jsx-abstract-component.js = {"result":[{"name":"x","type":"number"},{"name":"y","type":"string"}]}
jsx-with-children.js = {"result":[{"name":"x","type":"number"}]}
jsx-text.js = {"result":[]}
customfun.js = {
  "result":[
    {"name":"objectGetPrototypeOf","type":"(o: any) => any"},
    {"name":"objectAssign","type":"(target: any, ...sources: Array<any>) => any"},
    {
      "name":"idx",
      "type":"<IdxObject: any, IdxResult>(obj: IdxObject, pathCallback: (demaybefiedObj: IdxObject) => IdxResult) => ?IdxResult"
    }
  ]
}
issue-1368.js = {
  "result":[
    {"name":"extended","type":"string"},
    {"name":"hasOwnProperty","type":"(prop: mixed) => boolean"},
    {"name":"isPrototypeOf","type":"(o: mixed) => boolean"},
    {"name":"method","type":"() => void"},
    {"name":"prop","type":"number"},
    {"name":"propertyIsEnumerable","type":"(prop: mixed) => boolean"},
    {"name":"toLocaleString","type":"() => string"},
    {"name":"toString","type":"() => string"},
    {"name":"valueOf","type":"() => mixed"}
  ]
}
if.js = {
  "result":[
    {"name":"@@iterator","type":"() => Iterator<string>"},
    {"name":"anchor","type":"(name: string) => string"},
    {"name":"charAt","type":"(pos: number) => string"},
    {"name":"charCodeAt","type":"(index: number) => number"},
    {"name":"codePointAt","type":"(index: number) => number"},
    {"name":"concat","type":"(...strings: Array<string>) => string"},
    {
      "name":"endsWith",
      "type":"(searchString: string, position?: number) => boolean"
    },
    {"name":"hasOwnProperty","type":"(prop: mixed) => boolean"},
    {
      "name":"includes",
      "type":"(searchString: string, position?: number) => boolean"
    },
    {"name":"indexOf","type":"(searchString: string, position?: number) => number"},
    {"name":"isPrototypeOf","type":"(o: mixed) => boolean"},
    {
      "name":"lastIndexOf",
      "type":"(searchString: string, position?: number) => number"
    },
    {"name":"length","type":"number"},
    {"name":"link","type":"(href: string) => string"},
    {
      "name":"localeCompare",
      "type":"(that: string, locales?: (string | Array<string>), options?: Intl$CollatorOptions) => number"
    },
    {
      "name":"match",
      "type":"(regexp: (string | RegExp)) => (RegExp$matchResult | null)"
    },
    {
      "name":"matchAll",
      "type":"(regexp: (string | RegExp)) => Iterator<RegExp$matchResult>"
    },
    {"name":"normalize","type":"(format?: string) => string"},
    {"name":"padEnd","type":"(targetLength: number, padString?: string) => string"},
    {
      "name":"padStart",
      "type":"(targetLength: number, padString?: string) => string"
    },
    {"name":"propertyIsEnumerable","type":"(prop: mixed) => boolean"},
    {"name":"repeat","type":"(count: number) => string"},
    {
      "name":"replace",
      "type":"(searchValue: (string | RegExp), replaceValue: (string | ((substring: string, ...args: Array<any>) => string))) => string"
    },
    {"name":"search","type":"(regexp: (string | RegExp)) => number"},
    {"name":"slice","type":"(start?: number, end?: number) => string"},
    {
      "name":"split",
      "type":"(separator?: (string | RegExp), limit?: number) => Array<string>"
    },
    {
      "name":"startsWith",
      "type":"(searchString: string, position?: number) => boolean"
    },
    {"name":"substr","type":"(from: number, length?: number) => string"},
    {"name":"substring","type":"(start: number, end?: number) => string"},
    {
      "name":"toLocaleLowerCase",
      "type":"(locale?: (string | Array<string>)) => string"
    },
    {"name":"toLocaleString","type":"() => string"},
    {
      "name":"toLocaleUpperCase",
      "type":"(locale?: (string | Array<string>)) => string"
    },
    {"name":"toLowerCase","type":"() => string"},
    {"name":"toString","type":"() => string"},
    {"name":"toUpperCase","type":"() => string"},
    {"name":"trim","type":"() => string"},
    {"name":"trimEnd","type":"() => string"},
    {"name":"trimLeft","type":"() => string"},
    {"name":"trimRight","type":"() => string"},
    {"name":"trimStart","type":"() => string"},
    {"name":"valueOf","type":"() => string"}
  ]
}
override.js = {
  "result":[
    {"name":"bar","type":"() => void"},
    {"name":"foo","type":"() => string"},
    {"name":"hasOwnProperty","type":"(prop: mixed) => boolean"},
    {"name":"isPrototypeOf","type":"(o: mixed) => boolean"},
    {"name":"override","type":"() => string"},
    {"name":"propertyIsEnumerable","type":"(prop: mixed) => boolean"},
    {"name":"toLocaleString","type":"() => string"},
    {"name":"toString","type":"() => string"},
    {"name":"valueOf","type":"() => mixed"}
  ]
}
member_class_property.js = {
  "label":"baz",
  "kind":6,
  "detail":"string",
  "inlineDetail":"string",
  "sortText":"00000000000000000000",
  "insertTextFormat":1
}
{
  "label":"hasOwnProperty",
  "kind":3,
  "detail":"(prop: mixed) => boolean",
  "inlineDetail":"(prop: mixed) => boolean",
  "sortText":"00000000000000000001",
  "insertTextFormat":1
}
{
  "label":"isPrototypeOf",
  "kind":3,
  "detail":"(o: mixed) => boolean",
  "inlineDetail":"(o: mixed) => boolean",
  "sortText":"00000000000000000001",
  "insertTextFormat":1
}
{
  "label":"propertyIsEnumerable",
  "kind":3,
  "detail":"(prop: mixed) => boolean",
  "inlineDetail":"(prop: mixed) => boolean",
  "sortText":"00000000000000000001",
  "insertTextFormat":1
}
{
  "label":"toLocaleString",
  "kind":3,
  "detail":"() => string",
  "inlineDetail":"() => string",
  "sortText":"00000000000000000001",
  "insertTextFormat":1
}
{
  "label":"toString",
  "kind":3,
  "detail":"() => string",
  "inlineDetail":"() => string",
  "sortText":"00000000000000000001",
  "insertTextFormat":1
}
{
  "label":"valueOf",
  "kind":3,
  "detail":"() => mixed",
  "inlineDetail":"() => mixed",
  "sortText":"00000000000000000001",
  "insertTextFormat":1
}
member_class_static.js = {
  "result":[
    {"name":"apply","type":"(thisArg: any, argArray?: any) => any"},
    {"name":"arguments","type":"any"},
    {"name":"bar","type":"string"},
    {"name":"bind","type":"(thisArg: any, ...argArray: Array<any>) => any"},
    {"name":"call","type":"(thisArg: any, ...argArray: Array<any>) => any"},
    {"name":"caller","type":"any | null"},
    {"name":"hasOwnProperty","type":"(prop: mixed) => boolean"},
    {"name":"isPrototypeOf","type":"(o: mixed) => boolean"},
    {"name":"length","type":"number"},
    {"name":"name","type":"string"},
    {"name":"propertyIsEnumerable","type":"(prop: mixed) => boolean"},
    {"name":"toLocaleString","type":"() => string"},
    {"name":"toString","type":"() => string"},
    {"name":"valueOf","type":"() => mixed"}
  ]
}
optional_chaining_new.js = {
  "result":[
    {"name":"bar","type":"void | number"},
    {"name":"hasOwnProperty","type":"void | ((prop: mixed) => boolean)"},
    {"name":"isPrototypeOf","type":"void | ((o: mixed) => boolean)"},
    {"name":"propertyIsEnumerable","type":"void | ((prop: mixed) => boolean)"},
    {"name":"toLocaleString","type":"void | (() => string)"},
    {"name":"toString","type":"void | (() => string)"},
    {"name":"valueOf","type":"void | (() => mixed)"}
  ]
}
optional_chaining_continue.js = {
  "result":[
    {"name":"baz","type":"void | number"},
    {"name":"hasOwnProperty","type":"void | ((prop: mixed) => boolean)"},
    {"name":"isPrototypeOf","type":"void | ((o: mixed) => boolean)"},
    {"name":"propertyIsEnumerable","type":"void | ((prop: mixed) => boolean)"},
    {"name":"toLocaleString","type":"void | (() => string)"},
    {"name":"toString","type":"void | (() => string)"},
    {"name":"valueOf","type":"void | (() => mixed)"}
  ]
}
idx.js = {
  "result":[
    {"name":"bar","type":"string"},
    {"name":"hasOwnProperty","type":"(prop: mixed) => boolean"},
    {"name":"isPrototypeOf","type":"(o: mixed) => boolean"},
    {"name":"propertyIsEnumerable","type":"(prop: mixed) => boolean"},
    {"name":"toLocaleString","type":"() => string"},
    {"name":"toString","type":"() => string"},
    {"name":"valueOf","type":"() => mixed"}
  ]
}
generic_alias.js = {
  "result":[
    {"name":"hasOwnProperty","type":"(prop: mixed) => boolean"},
    {"name":"isPrototypeOf","type":"(o: mixed) => boolean"},
    {"name":"name","type":"string"},
    {"name":"propertyIsEnumerable","type":"(prop: mixed) => boolean"},
    {"name":"toLocaleString","type":"() => string"},
    {"name":"toString","type":"() => string"},
    {"name":"valueOf","type":"() => mixed"}
  ]
}
object_literal.js:5:16 = {"result":[]}
object_literal.js:7:17 = {"result":[]}
optional_object.js = {
  "result":[
    {"name":"?.hasOwnProperty","type":"void | ((prop: mixed) => boolean)"},
    {"name":"?.isPrototypeOf","type":"void | ((o: mixed) => boolean)"},
    {"name":"?.propertyIsEnumerable","type":"void | ((prop: mixed) => boolean)"},
    {"name":"?.toLocaleString","type":"void | (() => string)"},
    {"name":"?.toString","type":"void | (() => string)"},
    {"name":"?.valueOf","type":"void | (() => mixed)"},
    {"name":"?.z","type":"void | number"}
  ]
}
indirect_array.js:5:3 = {
  "result":[
    {"name":"?.@@iterator","type":"void | (() => Iterator<T>)"},
    {
      "name":"?.concat",
      "type":"void | (<S, Item: ($ReadOnlyArray<S> | S)>(...items: Array<Item>) => Array<(T | S)>)"
    },
    {
      "name":"?.copyWithin",
      "type":"void | ((target: number, start: number, end?: number) => Array<T>)"
    },
    {"name":"?.entries","type":"void | (() => Iterator<[number, T]>)"},
    {
      "name":"?.every",
      "type":"void | ((callbackfn: (value: T, index: number, array: Array<T>) => mixed, thisArg?: any) => boolean)"
    },
    {
      "name":"?.fill",
      "type":"void | ((value: T, begin?: number, end?: number) => Array<T>)"
    },
    {
      "name":"?.filter",
      "type":"void | ((callbackfn: (value: T, index: number, array: Array<T>) => mixed, thisArg?: any) => Array<T>)"
    },
    {
      "name":"?.find",
      "type":"void | ((callbackfn: (value: T, index: number, array: Array<T>) => mixed, thisArg?: any) => (T | void))"
    },
    {
      "name":"?.findIndex",
      "type":"void | ((callbackfn: (value: T, index: number, array: Array<T>) => mixed, thisArg?: any) => number)"
    },
    {"name":"?.flat","type":"void | ((depth?: number) => Array<mixed>)"},
    {
      "name":"?.flatMap",
      "type":"void | (<U>(callbackfn: (value: T, index: number, array: Array<T>) => ($ReadOnlyArray<U> | U), thisArg?: any) => Array<U>)"
    },
    {
      "name":"?.forEach",
      "type":"void | ((callbackfn: (value: T, index: number, array: Array<T>) => mixed, thisArg?: any) => void)"
    },
    {"name":"?.hasOwnProperty","type":"void | ((prop: mixed) => boolean)"},
    {
      "name":"?.includes",
      "type":"void | ((searchElement: mixed, fromIndex?: number) => boolean)"
    },
    {
      "name":"?.indexOf",
      "type":"void | ((searchElement: mixed, fromIndex?: number) => number)"
    },
    {"name":"?.isPrototypeOf","type":"void | ((o: mixed) => boolean)"},
    {"name":"?.join","type":"void | ((separator?: string) => string)"},
    {"name":"?.keys","type":"void | (() => Iterator<number>)"},
    {
      "name":"?.lastIndexOf",
      "type":"void | ((searchElement: mixed, fromIndex?: number) => number)"
    },
    {"name":"?.length","type":"void | number"},
    {
      "name":"?.map",
      "type":"void | (<U>(callbackfn: (value: T, index: number, array: Array<T>) => U, thisArg?: any) => Array<U>)"
    },
    {"name":"?.pop","type":"void | (() => T)"},
    {"name":"?.propertyIsEnumerable","type":"void | ((prop: mixed) => boolean)"},
    {"name":"?.push","type":"void | ((...items: Array<T>) => number)"},
    {
      "name":"?.reduce",
      "type":"void | (<U>(callbackfn: (previousValue: U, currentValue: T, currentIndex: number, array: Array<T>) => U, initialValue: U) => U)"
    },
    {
      "name":"?.reduceRight",
      "type":"void | (<U>(callbackfn: (previousValue: U, currentValue: T, currentIndex: number, array: Array<T>) => U, initialValue: U) => U)"
    },
    {"name":"?.reverse","type":"void | (() => Array<T>)"},
    {"name":"?.shift","type":"void | (() => T)"},
    {"name":"?.slice","type":"void | ((start?: number, end?: number) => Array<T>)"},
    {
      "name":"?.some",
      "type":"void | ((callbackfn: (value: T, index: number, array: Array<T>) => mixed, thisArg?: any) => boolean)"
    },
    {
      "name":"?.sort",
      "type":"void | ((compareFn?: (a: T, b: T) => number) => Array<T>)"
    },
    {
      "name":"?.splice",
      "type":"void | ((start: number, deleteCount?: number, ...items: Array<T>) => Array<T>)"
    },
    {"name":"?.toLocaleString","type":"void | (() => string)"},
    {"name":"?.toString","type":"void | (() => string)"},
    {"name":"?.unshift","type":"void | ((...items: Array<T>) => number)"},
    {"name":"?.valueOf","type":"void | (() => mixed)"},
    {"name":"?.values","type":"void | (() => Iterator<T>)"}
  ]
}
indirect_array.js:10:3 = {
  "result":[
    {"name":"@@iterator","type":"() => Iterator<T>"},
    {
      "name":"concat",
      "type":"<S, Item: ($ReadOnlyArray<S> | S)>(...items: Array<Item>) => Array<(T | S)>"
    },
    {
      "name":"copyWithin",
      "type":"(target: number, start: number, end?: number) => Array<T>"
    },
    {"name":"entries","type":"() => Iterator<[number, T]>"},
    {
      "name":"every",
      "type":"(callbackfn: (value: T, index: number, array: Array<T>) => mixed, thisArg?: any) => boolean"
    },
    {"name":"fill","type":"(value: T, begin?: number, end?: number) => Array<T>"},
    {
      "name":"filter",
      "type":"(callbackfn: (value: T, index: number, array: Array<T>) => mixed, thisArg?: any) => Array<T>"
    },
    {
      "name":"find",
      "type":"(callbackfn: (value: T, index: number, array: Array<T>) => mixed, thisArg?: any) => (T | void)"
    },
    {
      "name":"findIndex",
      "type":"(callbackfn: (value: T, index: number, array: Array<T>) => mixed, thisArg?: any) => number"
    },
    {"name":"flat","type":"(depth?: number) => Array<mixed>"},
    {
      "name":"flatMap",
      "type":"<U>(callbackfn: (value: T, index: number, array: Array<T>) => ($ReadOnlyArray<U> | U), thisArg?: any) => Array<U>"
    },
    {
      "name":"forEach",
      "type":"(callbackfn: (value: T, index: number, array: Array<T>) => mixed, thisArg?: any) => void"
    },
    {"name":"hasOwnProperty","type":"(prop: mixed) => boolean"},
    {
      "name":"includes",
      "type":"(searchElement: mixed, fromIndex?: number) => boolean"
    },
    {
      "name":"indexOf",
      "type":"(searchElement: mixed, fromIndex?: number) => number"
    },
    {"name":"isPrototypeOf","type":"(o: mixed) => boolean"},
    {"name":"join","type":"(separator?: string) => string"},
    {"name":"keys","type":"() => Iterator<number>"},
    {
      "name":"lastIndexOf",
      "type":"(searchElement: mixed, fromIndex?: number) => number"
    },
    {"name":"length","type":"number"},
    {
      "name":"map",
      "type":"<U>(callbackfn: (value: T, index: number, array: Array<T>) => U, thisArg?: any) => Array<U>"
    },
    {"name":"pop","type":"() => T"},
    {"name":"propertyIsEnumerable","type":"(prop: mixed) => boolean"},
    {"name":"push","type":"(...items: Array<T>) => number"},
    {
      "name":"reduce",
      "type":"<U>(callbackfn: (previousValue: U, currentValue: T, currentIndex: number, array: Array<T>) => U, initialValue: U) => U"
    },
    {
      "name":"reduceRight",
      "type":"<U>(callbackfn: (previousValue: U, currentValue: T, currentIndex: number, array: Array<T>) => U, initialValue: U) => U"
    },
    {"name":"reverse","type":"() => Array<T>"},
    {"name":"shift","type":"() => T"},
    {"name":"slice","type":"(start?: number, end?: number) => Array<T>"},
    {
      "name":"some",
      "type":"(callbackfn: (value: T, index: number, array: Array<T>) => mixed, thisArg?: any) => boolean"
    },
    {"name":"sort","type":"(compareFn?: (a: T, b: T) => number) => Array<T>"},
    {
      "name":"splice",
      "type":"(start: number, deleteCount?: number, ...items: Array<T>) => Array<T>"
    },
    {"name":"toLocaleString","type":"() => string"},
    {"name":"toString","type":"() => string"},
    {"name":"unshift","type":"(...items: Array<T>) => number"},
    {"name":"valueOf","type":"() => mixed"},
    {"name":"values","type":"() => Iterator<T>"}
  ]
}
infer.js = {
  "result":[
    {"name":"?.b","type":"void | number"},
    {"name":"?.hasOwnProperty","type":"void | ((prop: mixed) => boolean)"},
    {"name":"?.isPrototypeOf","type":"void | ((o: mixed) => boolean)"},
    {"name":"?.propertyIsEnumerable","type":"void | ((prop: mixed) => boolean)"},
    {"name":"?.toLocaleString","type":"void | (() => string)"},
    {"name":"?.toString","type":"void | (() => string)"},
    {"name":"?.valueOf","type":"void | (() => mixed)"}
  ]
}
eval_predicate.js = {
  "result":[
    {"name":"a","type":"number"},
    {"name":"hasOwnProperty","type":"(prop: mixed) => boolean"},
    {"name":"isPrototypeOf","type":"(o: mixed) => boolean"},
    {"name":"propertyIsEnumerable","type":"(prop: mixed) => boolean"},
    {"name":"toLocaleString","type":"() => string"},
    {"name":"toString","type":"() => string"},
    {"name":"valueOf","type":"() => mixed"}
  ]
}
eval_destructor.js = {
  "result":[
    {"name":"a","type":"number"},
    {"name":"hasOwnProperty","type":"(prop: mixed) => boolean"},
    {"name":"isPrototypeOf","type":"(o: mixed) => boolean"},
    {"name":"propertyIsEnumerable","type":"(prop: mixed) => boolean"},
    {"name":"toLocaleString","type":"() => string"},
    {"name":"toString","type":"() => string"},
    {"name":"valueOf","type":"() => mixed"}
  ]
}
poly.js = {
  "result":[
    {"name":"hasOwnProperty","type":"(prop: mixed) => boolean"},
    {"name":"isPrototypeOf","type":"(o: mixed) => boolean"},
    {"name":"propertyIsEnumerable","type":"(prop: mixed) => boolean"},
    {"name":"toLocaleString","type":"() => string"},
    {"name":"toString","type":"() => string"},
    {"name":"valueOf","type":"() => mixed"},
    {"name":"x","type":"number"},
    {"name":"y","type":"T"}
  ]
}
poly_no_args.js = {
  "result":[
    {"name":"hasOwnProperty","type":"(prop: mixed) => boolean"},
    {"name":"isPrototypeOf","type":"(o: mixed) => boolean"},
    {"name":"propertyIsEnumerable","type":"(prop: mixed) => boolean"},
    {"name":"toLocaleString","type":"() => string"},
    {"name":"toString","type":"() => string"},
    {"name":"valueOf","type":"() => mixed"},
    {"name":"x","type":"S"}
  ]
}
identifier.js = {
  "result":[
    {"name":"this","type":"this"},
    {"name":"flowery","type":"number"},
    {"name":"flounder","type":"any"},
    {"name":"flotsam","type":"number"},
    {"name":"florist","type":"number"},
    {"name":"florescent","type":"() => void"},
    {"name":"floater","type":"number"},
    {"name":"bartender","type":"number"}
  ]
}
super.js = {
  "result":[
    {"name":"super","type":"super"},
    {"name":"this","type":"this"},
    {"name":"Foo","type":"class Foo"}
  ]
}
this-2.js = {
  "result":[
    {"name":"y","type":"(z: empty) => empty"},
    {"name":"x","type":"any"},
    {"name":"foo","type":"() => void"}
  ]
}
{
  "result":[
    {"name":"this","type":"this"},
    {"name":"y","type":"(z: empty) => empty"},
    {"name":"x","type":"void"},
    {"name":"foo","type":"() => void"}
  ]
}
{
  "result":[
    {"name":"z","type":"empty"},
    {"name":"y","type":"(z: empty) => any"},
    {"name":"x","type":"void"},
    {"name":"foo","type":"() => void"}
  ]
}
{
  "result":[
    {"name":"super","type":"super"},
    {"name":"this","type":"this"},
    {"name":"y","type":"(z: empty) => empty"},
    {"name":"x","type":"void"},
    {"name":"foo","type":"() => void"},
    {"name":"Bar","type":"class Bar"}
  ]
}
pattern.js = {"result":[]}
{"result":[{"name":"foo","type":"number"},{"name":"bar","type":"() => void"}]}
{"result":[]}
normalize-1.js = {
  "result":[
    {"name":"b","type":"T"},
    {"name":"hasOwnProperty","type":"(prop: mixed) => boolean"},
    {"name":"isPrototypeOf","type":"(o: mixed) => boolean"},
    {"name":"propertyIsEnumerable","type":"(prop: mixed) => boolean"},
    {"name":"toLocaleString","type":"() => string"},
    {"name":"toString","type":"() => string"},
    {"name":"valueOf","type":"() => mixed"}
  ]
}
normalize-2.js = {
  "result":[
    {"name":"this","type":"this"},
    {"name":"foo","type":"<T>(a: {b: T}) => any"},
    {"name":"c","type":"T"},
    {"name":"a","type":"{b: T}"}
  ]
}
unqualified-type-annotation.js = {
  "result":[
    {"name":"Typologies","type":"module Typologies"},
    {"name":"Typography","type":"class Typewriter"},
    {"name":"Typewriter","type":"class Typewriter"},
    {"name":"Types","type":"module Types"},
    {"name":"Typesafe","type":"interface Typesafety"},
    {"name":"Typhoon","type":"type Typhoon = string"},
    {"name":"Typnotism","type":"type Typnotism = number"},
    {"name":"Tyrant","type":"type Tyrant = string"},
    {"name":"Tympanic","type":"type Tympanic = number"},
    {"name":"Typeset","type":"interface Typeset"},
    {"name":"Typaram","type":"Typaram"}
  ]
}
qualified-type-annotation.js = {
  "result":[
    {"name":"Typesafety","type":"interface Typesafety"},
    {"name":"Typical","type":"type Typical = {|x: number, y: number|}"},
    {"name":"Tyrannosaurus","type":"class Tyrannosaurus"}
  ]
}
qualified-type-annotation-require.js = {
  "result":[
    {"name":"Typesafety","type":"interface Typesafety"},
    {"name":"Typical","type":"type Typical = {|x: number, y: number|}"},
    {"name":"Tyrannosaurus","type":"class Tyrannosaurus"}
  ]
}
inherited-class-properties.js = {
  "result":[
    {"name":"bar","type":"\"bar\""},
    {"name":"baz","type":"\"baz\""},
    {"name":"foo","type":"\"oof\""},
    {"name":"hasOwnProperty","type":"(prop: mixed) => boolean"},
    {"name":"isPrototypeOf","type":"(o: mixed) => boolean"},
    {"name":"propertyIsEnumerable","type":"(prop: mixed) => boolean"},
    {"name":"toLocaleString","type":"() => string"},
    {"name":"toString","type":"() => string"},
    {"name":"valueOf","type":"() => mixed"}
  ]
}
function-added-properties.js = {
  "result":[
    {"name":"apply","type":"(thisArg: any, argArray?: any) => any"},
    {"name":"arguments","type":"any"},
    {"name":"bar","type":"string"},
    {"name":"bind","type":"(thisArg: any, ...argArray: Array<any>) => any"},
    {"name":"call","type":"(thisArg: any, ...argArray: Array<any>) => any"},
    {"name":"caller","type":"any | null"},
    {"name":"hasOwnProperty","type":"(prop: mixed) => boolean"},
    {"name":"isPrototypeOf","type":"(o: mixed) => boolean"},
    {"name":"length","type":"number"},
    {"name":"name","type":"string"},
    {"name":"propertyIsEnumerable","type":"(prop: mixed) => boolean"},
    {"name":"toLocaleString","type":"() => string"},
    {"name":"toString","type":"() => string"},
    {"name":"valueOf","type":"() => mixed"}
  ]
}
comments.js (line) = {"result":[]}
comments.js (block) = {"result":[]}
literal.js (inside string) = {"result":[]}
literal.js (inside regex) = {"result":[]}
literal.js (inside template literal) = {"result":[]}
import_source.js = {"result":[]}
object-with-prototype.js = {
  "result":[
    {"name":"bar","type":"string"},
    {"name":"baz","type":"string"},
    {"name":"hasOwnProperty","type":"(prop: mixed) => boolean"},
    {"name":"isPrototypeOf","type":"(o: mixed) => boolean"},
    {"name":"propertyIsEnumerable","type":"(prop: mixed) => boolean"},
    {"name":"toLocaleString","type":"() => string"},
    {"name":"toString","type":"() => string"},
    {"name":"valueOf","type":"() => mixed"}
  ]
}
object-spread-1.js = {
  "result":[
    {"name":"bar","type":"B"},
    {"name":"foo","type":"A"},
    {"name":"hasOwnProperty","type":"(prop: mixed) => boolean"},
    {"name":"isPrototypeOf","type":"(o: mixed) => boolean"},
    {"name":"propertyIsEnumerable","type":"(prop: mixed) => boolean"},
    {"name":"toLocaleString","type":"() => string"},
    {"name":"toString","type":"() => string"},
    {"name":"valueOf","type":"() => mixed"}
  ]
}
object-spread-2.js = {
  "result":[
    {"name":"bar","type":"C"},
    {"name":"foo","type":"A"},
    {"name":"hasOwnProperty","type":"(prop: mixed) => boolean"},
    {"name":"isPrototypeOf","type":"(o: mixed) => boolean"},
    {"name":"propertyIsEnumerable","type":"(prop: mixed) => boolean"},
    {"name":"toLocaleString","type":"() => string"},
    {"name":"toString","type":"() => string"},
    {"name":"valueOf","type":"() => mixed"}
  ]
}
union-2.js = {
  "result":[
    {"name":"bar","type":"\"D\" | \"B\""},
    {"name":"foo","type":"\"A\""},
    {"name":"hasOwnProperty","type":"(prop: mixed) => boolean"},
    {"name":"isPrototypeOf","type":"(o: mixed) => boolean"},
    {"name":"propertyIsEnumerable","type":"(prop: mixed) => boolean"},
    {"name":"toLocaleString","type":"() => string"},
    {"name":"toString","type":"() => string"},
    {"name":"valueOf","type":"() => mixed"}
  ]
}
type-alias.js = {
  "result":[
    {"name":"a","type":"number"},
    {"name":"b","type":"string"},
    {"name":"hasOwnProperty","type":"(prop: mixed) => boolean"},
    {"name":"isPrototypeOf","type":"(o: mixed) => boolean"},
    {"name":"propertyIsEnumerable","type":"(prop: mixed) => boolean"},
    {"name":"toLocaleString","type":"() => string"},
    {"name":"toString","type":"() => string"},
    {"name":"valueOf","type":"() => mixed"}
  ]
}
intersection.js = {
  "result":[
    {"name":"bar","type":"B"},
    {"name":"baz","type":"D"},
    {"name":"foo","type":"C & A"},
    {"name":"hasOwnProperty","type":"(prop: mixed) => boolean"},
    {"name":"isPrototypeOf","type":"(o: mixed) => boolean"},
    {"name":"propertyIsEnumerable","type":"(prop: mixed) => boolean"},
    {"name":"toLocaleString","type":"() => string"},
    {"name":"toString","type":"() => string"},
    {"name":"valueOf","type":"() => mixed"}
  ]
}
rank.js = {
  "label":"hasOwnProperty",
  "kind":3,
  "detail":"(prop: mixed) => boolean",
  "inlineDetail":"(prop: mixed) => boolean",
  "sortText":"00000000000000000001",
  "insertTextFormat":1
}
{
  "label":"isPrototypeOf",
  "kind":3,
  "detail":"(o: mixed) => boolean",
  "inlineDetail":"(o: mixed) => boolean",
  "sortText":"00000000000000000001",
  "insertTextFormat":1
}
{
  "label":"propertyIsEnumerable",
  "kind":3,
  "detail":"(prop: mixed) => boolean",
  "inlineDetail":"(prop: mixed) => boolean",
  "sortText":"00000000000000000001",
  "insertTextFormat":1
}
{
  "label":"toLocaleString",
  "kind":3,
  "detail":"() => string",
  "inlineDetail":"() => string",
  "sortText":"00000000000000000001",
  "insertTextFormat":1
}
{
  "label":"toString",
  "kind":6,
  "detail":"number",
  "inlineDetail":"number",
  "sortText":"00000000000000000000",
  "insertTextFormat":1
}
{
  "label":"valueOf",
  "kind":3,
  "detail":"() => mixed",
  "inlineDetail":"() => mixed",
  "sortText":"00000000000000000001",
  "insertTextFormat":1
}
rank_union.js = {
  "label":"hasOwnProperty",
  "kind":3,
  "detail":"(prop: mixed) => boolean",
  "inlineDetail":"(prop: mixed) => boolean",
  "sortText":"00000000000000000001",
  "insertTextFormat":1
}
{
  "label":"isPrototypeOf",
  "kind":3,
  "detail":"(o: mixed) => boolean",
  "inlineDetail":"(o: mixed) => boolean",
  "sortText":"00000000000000000001",
  "insertTextFormat":1
}
{
  "label":"propertyIsEnumerable",
  "kind":3,
  "detail":"(prop: mixed) => boolean",
  "inlineDetail":"(prop: mixed) => boolean",
  "sortText":"00000000000000000001",
  "insertTextFormat":1
}
{
  "label":"toLocaleString",
  "kind":3,
  "detail":"() => string",
  "inlineDetail":"() => string",
  "sortText":"00000000000000000001",
  "insertTextFormat":1
}
{
  "label":"toString",
  "kind":13,
  "detail":"(() => string) | number",
  "inlineDetail":"(() => string) | number",
  "sortText":"00000000000000000000",
  "insertTextFormat":1
}
{
  "label":"valueOf",
  "kind":3,
  "detail":"() => mixed",
  "inlineDetail":"() => mixed",
  "sortText":"00000000000000000001",
  "insertTextFormat":1
}
rank_intersection.js = {
  "label":"hasOwnProperty",
  "kind":3,
  "detail":"(prop: mixed) => boolean",
  "inlineDetail":"(prop: mixed) => boolean",
  "sortText":"00000000000000000001",
  "insertTextFormat":1
}
{
  "label":"isPrototypeOf",
  "kind":3,
  "detail":"(o: mixed) => boolean",
  "inlineDetail":"(o: mixed) => boolean",
  "sortText":"00000000000000000001",
  "insertTextFormat":1
}
{
  "label":"propertyIsEnumerable",
  "kind":3,
  "detail":"(prop: mixed) => boolean",
  "inlineDetail":"(prop: mixed) => boolean",
  "sortText":"00000000000000000001",
  "insertTextFormat":1
}
{
  "label":"toLocaleString",
  "kind":3,
  "detail":"() => string",
  "inlineDetail":"() => string",
  "sortText":"00000000000000000001",
  "insertTextFormat":1
}
{
  "label":"toString",
  "kind":6,
  "detail":"(() => string) & number",
  "inlineDetail":"(() => string) & number",
  "sortText":"00000000000000000000",
  "insertTextFormat":1
}
{
  "label":"valueOf",
  "kind":3,
  "detail":"() => mixed",
  "inlineDetail":"() => mixed",
  "sortText":"00000000000000000001",
  "insertTextFormat":1
}
suggest_optional_chaining_1.js = {
  "label":"?.foo",
  "kind":13,
  "detail":"void | string",
  "inlineDetail":"void | string",
  "sortText":"00000000000000000000",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":3,"character":1},"end":{"line":3,"character":2}},
    "newText":"?.foo"
  }
}
{
  "label":"?.hasOwnProperty",
  "kind":13,
  "detail":"void | ((prop: mixed) => boolean)",
  "inlineDetail":"void | ((prop: mixed) => boolean)",
  "sortText":"00000000000000000001",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":3,"character":1},"end":{"line":3,"character":2}},
    "newText":"?.hasOwnProperty"
  }
}
{
  "label":"?.isPrototypeOf",
  "kind":13,
  "detail":"void | ((o: mixed) => boolean)",
  "inlineDetail":"void | ((o: mixed) => boolean)",
  "sortText":"00000000000000000001",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":3,"character":1},"end":{"line":3,"character":2}},
    "newText":"?.isPrototypeOf"
  }
}
{
  "label":"?.propertyIsEnumerable",
  "kind":13,
  "detail":"void | ((prop: mixed) => boolean)",
  "inlineDetail":"void | ((prop: mixed) => boolean)",
  "sortText":"00000000000000000001",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":3,"character":1},"end":{"line":3,"character":2}},
    "newText":"?.propertyIsEnumerable"
  }
}
{
  "label":"?.toLocaleString",
  "kind":13,
  "detail":"void | (() => string)",
  "inlineDetail":"void | (() => string)",
  "sortText":"00000000000000000001",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":3,"character":1},"end":{"line":3,"character":2}},
    "newText":"?.toLocaleString"
  }
}
{
  "label":"?.toString",
  "kind":13,
  "detail":"void | (() => string)",
  "inlineDetail":"void | (() => string)",
  "sortText":"00000000000000000001",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":3,"character":1},"end":{"line":3,"character":2}},
    "newText":"?.toString"
  }
}
{
  "label":"?.valueOf",
  "kind":13,
  "detail":"void | (() => mixed)",
  "inlineDetail":"void | (() => mixed)",
  "sortText":"00000000000000000001",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":3,"character":1},"end":{"line":3,"character":2}},
    "newText":"?.valueOf"
  }
}
suggest_optional_chaining_2.js = {
  "label":"?.bar",
  "kind":13,
  "detail":"void | number",
  "inlineDetail":"void | number",
  "sortText":"00000000000000000000",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":3,"character":1},"end":{"line":3,"character":2}},
    "newText":"?.bar"
  }
}
{
  "label":"foo",
  "kind":6,
  "detail":"string",
  "inlineDetail":"string",
  "sortText":"00000000000000000000",
  "insertTextFormat":1
}
{
  "label":"hasOwnProperty",
  "kind":3,
  "detail":"(prop: mixed) => boolean",
  "inlineDetail":"(prop: mixed) => boolean",
  "sortText":"00000000000000000001",
  "insertTextFormat":1
}
{
  "label":"isPrototypeOf",
  "kind":3,
  "detail":"(o: mixed) => boolean",
  "inlineDetail":"(o: mixed) => boolean",
  "sortText":"00000000000000000001",
  "insertTextFormat":1
}
{
  "label":"propertyIsEnumerable",
  "kind":3,
  "detail":"(prop: mixed) => boolean",
  "inlineDetail":"(prop: mixed) => boolean",
  "sortText":"00000000000000000001",
  "insertTextFormat":1
}
{
  "label":"toLocaleString",
  "kind":3,
  "detail":"() => string",
  "inlineDetail":"() => string",
  "sortText":"00000000000000000001",
  "insertTextFormat":1
}
{
  "label":"toString",
  "kind":3,
  "detail":"() => string",
  "inlineDetail":"() => string",
  "sortText":"00000000000000000001",
  "insertTextFormat":1
}
{
  "label":"valueOf",
  "kind":3,
  "detail":"() => mixed",
  "inlineDetail":"() => mixed",
  "sortText":"00000000000000000001",
  "insertTextFormat":1
}
suggest_optional_chaining_3.js = {
  "label":"?.foo",
  "kind":13,
  "detail":"void | number | string",
  "inlineDetail":"void | number | string",
  "sortText":"00000000000000000000",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":3,"character":1},"end":{"line":3,"character":2}},
    "newText":"?.foo"
  }
}
{
  "label":"hasOwnProperty",
  "kind":3,
  "detail":"(prop: mixed) => boolean",
  "inlineDetail":"(prop: mixed) => boolean",
  "sortText":"00000000000000000001",
  "insertTextFormat":1
}
{
  "label":"isPrototypeOf",
  "kind":3,
  "detail":"(o: mixed) => boolean",
  "inlineDetail":"(o: mixed) => boolean",
  "sortText":"00000000000000000001",
  "insertTextFormat":1
}
{
  "label":"propertyIsEnumerable",
  "kind":3,
  "detail":"(prop: mixed) => boolean",
  "inlineDetail":"(prop: mixed) => boolean",
  "sortText":"00000000000000000001",
  "insertTextFormat":1
}
{
  "label":"toLocaleString",
  "kind":3,
  "detail":"() => string",
  "inlineDetail":"() => string",
  "sortText":"00000000000000000001",
  "insertTextFormat":1
}
{
  "label":"toString",
  "kind":3,
  "detail":"() => string",
  "inlineDetail":"() => string",
  "sortText":"00000000000000000001",
  "insertTextFormat":1
}
{
  "label":"valueOf",
  "kind":3,
  "detail":"() => mixed",
  "inlineDetail":"() => mixed",
  "sortText":"00000000000000000001",
  "insertTextFormat":1
}
enums.js = {
  "label":"Bar",
  "kind":6,
  "detail":"E",
  "inlineDetail":"E",
  "sortText":"00000000000000000000",
  "insertTextFormat":1
}
{
  "label":"Foo",
  "kind":6,
  "detail":"E",
  "inlineDetail":"E",
  "sortText":"00000000000000000000",
  "insertTextFormat":1
}
{
  "label":"cast",
  "kind":3,
  "detail":"(input: string) => (void | E)",
  "inlineDetail":"(input: string) => (void | E)",
  "sortText":"00000000000000000001",
  "insertTextFormat":1
}
{
  "label":"isValid",
  "kind":3,
  "detail":"(input: string) => boolean",
  "inlineDetail":"(input: string) => boolean",
  "sortText":"00000000000000000001",
  "insertTextFormat":1
}
{
  "label":"members",
  "kind":3,
  "detail":"() => Iterable<E>",
  "inlineDetail":"() => Iterable<E>",
  "sortText":"00000000000000000001",
  "insertTextFormat":1
}
class_declaration_name.js = {"result":[]}
